- make  a loop to save env 
- strchr to find path= in env
- use split to save path in char **


- cmd_path = NULL
while (path)
{
	strjoin
	if (access(cmd_path, 0) == 0)
		return cmd_path;
}
if (cmd_path == NULL)
	return (NULL);

void	clean_quotes(char *str)
{
	int i = 0;
	int j = 0;

	while (str[i])
	{
		if (str[i] != '\'' && str[i] != '\"')
			str[j++] = str[i];
		i++;
	}
	str[j] = '\0';
}

char	*ft_add_spaces(char *str)
{
	char	*new_str;
	int		i;
	int		j;

	i = 0;
	j = 0;
	new_str = malloc(ft_strlen(str) * 3);
	while (str[i])
	{
		if (str[i] == '<' && str[i + 1] != '<')
		{
			new_str[j++] = ' ';
			new_str[j++] = '<';
			new_str[j++] = ' ';
		}
		else if (str[i] == '<' && str[i + 1] == '<')
		{
			i++;
			new_str[j++] = ' ';
			new_str[j++] = '<';
			new_str[j++] = '<';
			new_str[j++] = ' ';
		}
		else if (str[i] == '>' && str[i + 1] != '>')
		{
			new_str[j++] = ' ';
			new_str[j++] = '>';
			new_str[j++] = ' ';
		}
		else if (str[i] == '>' && str[i + 1] == '>')
		{
			i++;
			new_str[j++] = ' ';
			new_str[j++] = '>';
			new_str[j++] = '>';
			new_str[j++] = ' ';
		}
		else
			new_str[j++] = str[i];
		i++;
	}
	new_str[j] = '\0';
	free(str);
	return (new_str);
}

I need to not put spaces if the characters is between double or single quotes